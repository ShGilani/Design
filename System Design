- Identify key pieces/ core components /Building blocks of the System

- Users: Who and How? Different ways in which User will be able to access our System. What are the User Interfaces?
- Scale: 
- System Performance:
- Cost: Cost of development, Cost of Maintenance
- Security:
---------------------------------------------------

High Level Architechture Digram



----------------------------------------------------

- API Design.

- Data Model Design.

- Low level Technical Design
What functions can the system perform? calculate, findTheHighest, display
For each function, What would be the input, output
Can it be made generic, reusable. ( based on code, based on location like a common util project)

- Technology Stack, Weigh Pros ad Cons


-----------------------------------------------------

- Load Balancing. This is mostly for Web Servers.

Caching:
- Database Caching ( In memory caching ). Commonly used cache: Redis, Cassandra, MemeCache.
Database Replication: Master Slave.
Sharding Technique: 
Mix of RDBMS and No SQL DBs

- Content - CDN

  


